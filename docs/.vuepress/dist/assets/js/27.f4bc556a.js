(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{178:function(t,e,i){"use strict";i.r(e);var a=i(0),r=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"git-操作总结"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-操作总结","aria-hidden":"true"}},[t._v("#")]),t._v(" GIT 操作总结")]),t._v(" "),i("h2",{attrs:{id:"_1-git-版本回退"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1-git-版本回退","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. git 版本回退")]),t._v(" "),i("h3",{attrs:{id:"三棵树"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#三棵树","aria-hidden":"true"}},[t._v("#")]),t._v(" 三棵树")]),t._v(" "),i("p",[t._v("首先来了解三棵树")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",{staticStyle:{"text-align":"center"}},[t._v("树")]),t._v(" "),i("th",{staticStyle:{"text-align":"center"}},[t._v("用途")])])]),t._v(" "),i("tbody",[i("tr",[i("td",{staticStyle:{"text-align":"center"}},[t._v("HEAD")]),t._v(" "),i("td",{staticStyle:{"text-align":"center"}},[t._v("上一次提交的快照，下一次提交的父结点")])]),t._v(" "),i("tr",[i("td",{staticStyle:{"text-align":"center"}},[t._v("Index")]),t._v(" "),i("td",{staticStyle:{"text-align":"center"}},[t._v("git add [filename] 存放的索引（暂存区）")])]),t._v(" "),i("tr",[i("td",{staticStyle:{"text-align":"center"}},[t._v("Working Directory")]),t._v(" "),i("td",{staticStyle:{"text-align":"center"}},[t._v("工作区")])])])]),t._v(" "),i("h4",{attrs:{id:"_1-在我们修改代码，没有-git-add-也没有-git-commit-的时候，代码存在于工作区，如图"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1-在我们修改代码，没有-git-add-也没有-git-commit-的时候，代码存在于工作区，如图","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 在我们修改代码，没有 git add, 也没有 git commit 的时候，代码存在于工作区，如图")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/3/13/16975a2ff36abc3c?w=679&h=521&f=png&s=31765",alt:""}})]),t._v(" "),i("h4",{attrs:{id:"_2-当你-git-add-file-txt-的时候，索引区-index-便有了此文件"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_2-当你-git-add-file-txt-的时候，索引区-index-便有了此文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 当你 "),i("code",[t._v("git add file.txt")]),t._v(" 的时候，索引区 index 便有了此文件")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/3/13/16975a7d3a41dec1?w=672&h=572&f=png&s=42432",alt:""}})]),t._v(" "),i("h4",{attrs:{id:"_3-接着运行-git-commit，它会取得索引中的内容并将它保存为一个永久的快照，然后创建一个指向该快照的提交对象，最后更新-master-来指向本次提交。"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_3-接着运行-git-commit，它会取得索引中的内容并将它保存为一个永久的快照，然后创建一个指向该快照的提交对象，最后更新-master-来指向本次提交。","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 接着运行 git commit，它会取得索引中的内容并将它保存为一个永久的快照，然后创建一个指向该快照的提交对象，最后更新 master 来指向本次提交。")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/3/13/16975abdedaffd11?w=681&h=581&f=png&s=58542",alt:""}})]),t._v(" "),i("h4",{attrs:{id:"_4-修改文件也是按照-file-——（change）——-working-directory-——（git-add）——-index-——（commit）——-head-的顺序进行，当然我们可以使用-git-status来查看当前所处的步骤"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-修改文件也是按照-file-——（change）——-working-directory-——（git-add）——-index-——（commit）——-head-的顺序进行，当然我们可以使用-git-status来查看当前所处的步骤","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 修改文件也是按照 file ——（change）—— Working Directory ——（git add）—— Index ——（commit）—— HEAD 的顺序进行，当然我们可以使用 "),i("code",[t._v("git status")]),t._v("来查看当前所处的步骤")]),t._v(" "),i("h3",{attrs:{id:"git-reset-的作用"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-的作用","aria-hidden":"true"}},[t._v("#")]),t._v(" git reset 的作用")]),t._v(" "),i("p",[t._v("为了演示这些例子，假设我们再次修改了 file.txt 文件并第三次提交它。 现在的历史看起来是这样的：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/3/13/16975b42fae5c123?w=676&h=545&f=png&s=71768",alt:""}})]),t._v(" "),i("p",[t._v("git reset 的作用便是将 HEAD 指向的版本进行变更，不同的参数三棵树的状况不一样")]),t._v(" "),i("p",[t._v("写法 "),i("code",[t._v("git reset HEAD~2")]),t._v(" "),i("code",[t._v("git reset 4564sf5s")])]),t._v(" "),i("ol",[i("li",[i("code",[t._v("git reset --soft HEAD")])])]),t._v(" "),i("p",[t._v("Git重置HEAD到另外一个commit，索引区index，工作区无变化")]),t._v(" "),i("ol",{attrs:{start:"2"}},[i("li",[i("code",[t._v("git reset HEAD")])])]),t._v(" "),i("p",[t._v("即 git reset --mixed HEAD , 它将重置HEAD到另外一个commit,并且重置index以便和HEAD相匹配，工作区无变化。")]),t._v(" "),i("ol",{attrs:{start:"3"}},[i("li",[i("code",[t._v("git reset --hard")])])]),t._v(" "),i("p",[t._v("--hard参数将会 blow out everything.它将重置HEAD返回到另外一个commit，重置index以便反映HEAD的变化，并且重置工作区也使得其完全匹配起来。")]),t._v(" "),i("p",[t._v("这是一个比较危险的动作，具有破坏性，数据因此可能会丢失！如果真是发生了数据丢失又希望找回来，那么只有使用：git reflog命令了。")])])}],!1,null,null,null);e.default=r.exports}}]);